name: build

on:
  push:
    branches:
      - main
      - develop
    paths-ignore:
      - '**/*.md'

  pull_request:
    branches:
      - main
      - develop
    paths-ignore:
      - '**/*.md'

  workflow_dispatch:

env:
  OSS_USER: ${{ secrets.OSS_USER }}
  OSS_TOKEN: ${{ secrets.OSS_TOKEN }}
  OSS_STAGING_PROFILE_ID: ${{ secrets.OSS_STAGING_PROFILE_ID }}
  GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

jobs:
  build:
    strategy:
      matrix:
        os: [ macOS-latest, windows-latest, ubuntu-latest ]

    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Versioning
        id: versioning
        shell: bash
        run: |
          if [!${{ github.ref == 'refs/heads/develop' }}]
          then
            echo "::set-output name=stage::alpha"
            echo "::set-output name=is_snapshot::false"
          else
            echo "::set-output name=stage::snapshot"
            echo "::set-output name=is_snapshot::true"
          fi

      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle build
        run: ./gradlew build -P"reckon.stage"="${{ steps.versioning.outputs.stage }}" -P"isSnapshot"="${{ steps.versioning.outputs.is_snapshot }}"

      - name: Generate code analysis reports
        run: ./gradlew detekt -P"reckon.stage"="${{ steps.versioning.outputs.stage }}" -P"isSnapshot"="${{ steps.versioning.outputs.is_snapshot }}"

      - name: Upload code analysis reports
        if: matrix.os == 'ubuntu-latest' && always()
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: build/reports/detekt/detekt.sarif

      - name: Generate coverage reports
        run: ./gradlew jacocoTestReport -P"reckon.stage"="${{ steps.versioning.outputs.stage }}" -P"isSnapshot"="${{ steps.versioning.outputs.is_snapshot }}"

      - name: Upload coverage reports
        if: matrix.os == 'ubuntu-latest'
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_TOKEN }}
          coverage-reports: build/reports/jacoco/xml/jacoco.xml

      - name: Generate snapshot docs
        if: github.ref == 'refs/heads/develop' && !(github.event_name == 'pull_request')
        run: ./gradlew dokkaHtmlMultiModule -P"reckon.stage"="snapshot" -P"isSnapshot"="true"

      - name: Publish a snapshot
        if: github.ref == 'refs/heads/develop' && !(github.event_name == 'pull_request')
        env:
          ossUser: ${{ secrets.OSS_USER }}
          ossToken: ${{ secrets.OSS_TOKEN }}
        run: ./gradlew publishToSonatype -P"reckon.stage"="snapshot" -P"isSnapshot"="true"

      - name: Deploy snapshot docs to Github Pages
        if: matrix.os == 'ubuntu-latest' && github.ref == 'refs/heads/develop' && !(github.event_name == 'pull_request')
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET_FOLDER: snapshot
          BRANCH: gh-pages
          FOLDER: build/dokka
          CLEAN: false
          SINGLE_COMMIT: true
