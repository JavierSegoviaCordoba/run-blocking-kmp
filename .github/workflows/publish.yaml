name: publish

on:
  push:
    tags:
      - '**'

env:
  OSS_USER: '${{ secrets.OSS_USER }}'
  OSS_TOKEN: '${{ secrets.OSS_TOKEN }}'
  OSS_STAGING_PROFILE_ID: '${{ secrets.OSS_STAGING_PROFILE_ID }}'
  SIGNING_KEY_NAME: '${{ secrets.SIGNING_KEY_NAME }}'
  SIGNING_KEY_ID: '${{ secrets.SIGNING_KEY_ID }}'
  SIGNING_KEY_PASSPHRASE: '${{ secrets.SIGNING_KEY_PASSPHRASE }}'
  SIGNING_KEY: '${{ secrets.SIGNING_KEY }}'

jobs:
  publish:
    strategy:
      matrix:
        os: [ macOS-latest, windows-latest, ubuntu-latest ]

    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v2.3.1
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle.properties', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Gradle build
        run: ./gradlew build

      - name: Generate Site docs
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: ./gradlew buildDocs

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.SIGNING_KEY }}
          passphrase: ${{ secrets.SIGNING_KEY_PASSPHRASE }}

      - name: Publish release
        run: ./gradlew publishToSonatype closeSonatypeStagingRepository

      - name: Deploy release docs to Github Pages
        if: ${{ matrix.os == 'ubuntu-latest' && !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc') }}
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: 'gh-pages'
          folder: 'build/docs/_site'
          clean: false
          single-commit: true

      - name: Stop Gradle daemons
        run: ./gradlew --stop

  github-release:
    runs-on: ubuntu-latest

    needs:
      - publish

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set pre-release
        shell: bash
        id: pre_release
        run: |
          if [[ ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }} ]]
          then
            echo ::set-output name=is_pre_release::true
          else
            echo ::set-output name=is_pre_release::false
          fi

      - name: Release
        uses: docker://antonyurchenko/git-release:latest
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          DRAFT_RELEASE: true
          PRE_RELEASE: '${{ steps.pre_release.outputs.is_pre_release }}'
          CHANGELOG_FILE: 'CHANGELOG.md'
          ALLOW_EMPTY_CHANGELOG: false
