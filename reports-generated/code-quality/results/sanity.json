{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Actual function 'runBlocking' has no corresponding expected declaration\nThe following declaration is incompatible because parameter types are different:\n    public expect fun <T> runBlocking(context: CoroutineContext = ..., block: suspend [ERROR : CoroutineScope].() -> T): T\n",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-all/jsMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 33,
      "length": 1,
      "code": {
        "startLine": 7,
        "length": 1,
        "offset": 73,
        "surroundingCode": "\n/** JS `runBlocking` implementation */\npublic actual fun <T> runBlocking(\n    context: CoroutineContext,\n    block: suspend CoroutineScope.() -> T\n): dynamic = GlobalScope.promise(context) { block() }"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-all.jsMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-1437885770200952668"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Actual function 'runBlocking' has no corresponding expected declaration\nThe following declaration is incompatible because parameter types are different:\n    public expect fun <T> runBlocking(context: CoroutineContext = ..., block: suspend [ERROR : CoroutineScope].() -> T): T\n",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "run-blocking-core/jvmMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 33,
      "length": 1,
      "code": {
        "startLine": 6,
        "length": 1,
        "offset": 74,
        "surroundingCode": "\n/** JVM `runBlocking` implementation */\npublic actual fun <T> runBlocking(\n    context: CoroutineContext,\n    block: suspend CoroutineScope.() -> T\n): T = runBlocking(context, block)"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-core.jvmMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-6622781797387252523"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: CoroutineScope",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-all/commonMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 26,
      "length": 14,
      "code": {
        "startLine": 3,
        "length": 14,
        "offset": 115,
        "surroundingCode": "import kotlin.coroutines.CoroutineContext\nimport kotlin.coroutines.EmptyCoroutineContext\nimport kotlinx.coroutines.CoroutineScope\n\n/**\n * Runs a new coroutine and **blocks** the current thread _interruptibly_ until its completion. This\n * function should not be used from a coroutine. It is designed to bridge regular blocking code to"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-all.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "2683345640303320356"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Expected function 'runBlocking' has no actual declaration in module run-blocking-kmp.run-blocking-all.iosArm64Main for Native\nThe following declaration is incompatible because parameter types are different:\n    public actual fun <T> runBlocking(context: CoroutineContext, block: suspend [ERROR : CoroutineScope].() -> T): T\n",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-all/commonMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 31,
      "offset": 33,
      "length": 1,
      "code": {
        "startLine": 29,
        "length": 1,
        "offset": 73,
        "surroundingCode": " * @param block the coroutine code.\n */\npublic expect fun <T> runBlocking(\n    context: CoroutineContext = EmptyCoroutineContext,\n    block: suspend CoroutineScope.() -> T\n): T"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-all.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-764304585678841074"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Expected function 'runBlocking' has no actual declaration in module run-blocking-kmp.run-blocking-all.iosSimulatorArm64Main for Native\nThe following declaration is incompatible because parameter types are different:\n    public actual fun <T> runBlocking(context: CoroutineContext, block: suspend [ERROR : CoroutineScope].() -> T): T\n",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-all/commonMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 31,
      "offset": 33,
      "length": 1,
      "code": {
        "startLine": 29,
        "length": 1,
        "offset": 73,
        "surroundingCode": " * @param block the coroutine code.\n */\npublic expect fun <T> runBlocking(\n    context: CoroutineContext = EmptyCoroutineContext,\n    block: suspend CoroutineScope.() -> T\n): T"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-all.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "2144851439176171441"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Expected function 'runBlocking' has no actual declaration in module run-blocking-kmp.run-blocking-all.iosX64Main for Native\nThe following declaration is incompatible because parameter types are different:\n    public actual fun <T> runBlocking(context: CoroutineContext, block: suspend [ERROR : CoroutineScope].() -> T): T\n",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-all/commonMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 31,
      "offset": 33,
      "length": 1,
      "code": {
        "startLine": 29,
        "length": 1,
        "offset": 73,
        "surroundingCode": " * @param block the coroutine code.\n */\npublic expect fun <T> runBlocking(\n    context: CoroutineContext = EmptyCoroutineContext,\n    block: suspend CoroutineScope.() -> T\n): T"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-all.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-6237439283114356900"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: CoroutineScope",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-all/nativeMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 4,
      "offset": 26,
      "length": 14,
      "code": {
        "startLine": 2,
        "length": 14,
        "offset": 69,
        "surroundingCode": "\nimport kotlin.coroutines.CoroutineContext\nimport kotlinx.coroutines.CoroutineScope\nimport kotlinx.coroutines.runBlocking\n\n/** Native `runBlocking` implementation */"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-all.nativeMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-6332192068733492984"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: runBlocking",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-all/nativeMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 26,
      "length": 11,
      "code": {
        "startLine": 3,
        "length": 11,
        "offset": 109,
        "surroundingCode": "import kotlin.coroutines.CoroutineContext\nimport kotlinx.coroutines.CoroutineScope\nimport kotlinx.coroutines.runBlocking\n\n/** Native `runBlocking` implementation */\npublic actual fun <T> runBlocking(\n    context: CoroutineContext,"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-all.nativeMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-4401702926258838403"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Actual function 'runBlocking' has no corresponding expected declaration\nThe following declaration is incompatible because parameter types are different:\n    public expect fun <T> runBlocking(context: CoroutineContext = ..., block: suspend [ERROR : CoroutineScope].() -> T): T\n",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-all/nativeMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 33,
      "length": 1,
      "code": {
        "startLine": 6,
        "length": 1,
        "offset": 77,
        "surroundingCode": "\n/** Native `runBlocking` implementation */\npublic actual fun <T> runBlocking(\n    context: CoroutineContext,\n    block: suspend CoroutineScope.() -> T\n): T = runBlocking(context, block)"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-all.nativeMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-8972148145695294477"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: CoroutineScope",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-all/nativeMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 10,
      "offset": 19,
      "length": 14,
      "code": {
        "startLine": 8,
        "length": 14,
        "offset": 85,
        "surroundingCode": "public actual fun <T> runBlocking(\n    context: CoroutineContext,\n    block: suspend CoroutineScope.() -> T\n): T = runBlocking(context, block)"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-all.nativeMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-6773698853380128980"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Actual function 'runBlocking' has no corresponding expected declaration\nThe following declaration is incompatible because parameter types are different:\n    public expect fun <T> runBlocking(context: CoroutineContext = ..., block: suspend [ERROR : CoroutineScope].() -> T): T\n",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "method",
      "path": "run-blocking-all/jvmMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 33,
      "length": 1,
      "code": {
        "startLine": 6,
        "length": 1,
        "offset": 74,
        "surroundingCode": "\n/** JVM `runBlocking` implementation */\npublic actual fun <T> runBlocking(\n    context: CoroutineContext,\n    block: suspend CoroutineScope.() -> T\n): T = runBlocking(context, block)"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-all.jvmMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-6830252476854127330"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: TestResult",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "suspend-test/commonMain/kotlin/com/javiersc/run/blocking/SuspendTest.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 31,
      "length": 10,
      "code": {
        "startLine": 3,
        "length": 10,
        "offset": 120,
        "surroundingCode": "import kotlin.coroutines.CoroutineContext\nimport kotlin.coroutines.EmptyCoroutineContext\nimport kotlinx.coroutines.test.TestResult\nimport kotlinx.coroutines.test.TestScope\nimport kotlinx.coroutines.test.runTest\n"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.suspend-test.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-6680014579986838945"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: TestScope",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "suspend-test/commonMain/kotlin/com/javiersc/run/blocking/SuspendTest.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 31,
      "length": 9,
      "code": {
        "startLine": 4,
        "length": 9,
        "offset": 120,
        "surroundingCode": "import kotlin.coroutines.EmptyCoroutineContext\nimport kotlinx.coroutines.test.TestResult\nimport kotlinx.coroutines.test.TestScope\nimport kotlinx.coroutines.test.runTest\n\n@Deprecated("
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.suspend-test.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-3744773846235174260"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: runTest",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "suspend-test/commonMain/kotlin/com/javiersc/run/blocking/SuspendTest.kt",
      "language": "kotlin",
      "line": 7,
      "offset": 31,
      "length": 7,
      "code": {
        "startLine": 5,
        "length": 7,
        "offset": 114,
        "surroundingCode": "import kotlinx.coroutines.test.TestResult\nimport kotlinx.coroutines.test.TestScope\nimport kotlinx.coroutines.test.runTest\n\n@Deprecated(\n    message = \"kotlinx-coroutines-test:1.6.0+ has added support to Kotlin Multiplatform\",\n    replaceWith = ReplaceWith(\"runTest\", \"kotlinx.coroutines.test.runTest\"),"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.suspend-test.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-4260986670416375701"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: TestScope",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "suspend-test/commonMain/kotlin/com/javiersc/run/blocking/SuspendTest.kt",
      "language": "kotlin",
      "line": 15,
      "offset": 19,
      "length": 9,
      "code": {
        "startLine": 13,
        "length": 9,
        "offset": 98,
        "surroundingCode": "public fun suspendTest(\n    context: CoroutineContext = EmptyCoroutineContext,\n    block: suspend TestScope.() -> Unit\n): TestResult = runTest(context = context, testBody = block)"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.suspend-test.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "889953067859865294"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: CoroutineScope",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-core/commonMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 26,
      "length": 14,
      "code": {
        "startLine": 3,
        "length": 14,
        "offset": 115,
        "surroundingCode": "import kotlin.coroutines.CoroutineContext\nimport kotlin.coroutines.EmptyCoroutineContext\nimport kotlinx.coroutines.CoroutineScope\n\n/**\n * Runs a new coroutine and **blocks** the current thread _interruptibly_ until its completion. This\n * function should not be used from a coroutine. It is designed to bridge regular blocking code to"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-1773645855041774494"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Expected function 'runBlocking' has no actual declaration in module run-blocking-kmp.run-blocking-core.iosArm64Main for Native\nThe following declaration is incompatible because parameter types are different:\n    public actual fun <T> runBlocking(context: CoroutineContext, block: suspend [ERROR : CoroutineScope].() -> T): T\n",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-core/commonMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 31,
      "offset": 33,
      "length": 1,
      "code": {
        "startLine": 29,
        "length": 1,
        "offset": 73,
        "surroundingCode": " * @param block the coroutine code.\n */\npublic expect fun <T> runBlocking(\n    context: CoroutineContext = EmptyCoroutineContext,\n    block: suspend CoroutineScope.() -> T\n): T"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-1397055427627286170"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Expected function 'runBlocking' has no actual declaration in module run-blocking-kmp.run-blocking-core.iosSimulatorArm64Main for Native\nThe following declaration is incompatible because parameter types are different:\n    public actual fun <T> runBlocking(context: CoroutineContext, block: suspend [ERROR : CoroutineScope].() -> T): T\n",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-core/commonMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 31,
      "offset": 33,
      "length": 1,
      "code": {
        "startLine": 29,
        "length": 1,
        "offset": 73,
        "surroundingCode": " * @param block the coroutine code.\n */\npublic expect fun <T> runBlocking(\n    context: CoroutineContext = EmptyCoroutineContext,\n    block: suspend CoroutineScope.() -> T\n): T"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-5501394368298266002"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Expected function 'runBlocking' has no actual declaration in module run-blocking-kmp.run-blocking-core.iosX64Main for Native\nThe following declaration is incompatible because parameter types are different:\n    public actual fun <T> runBlocking(context: CoroutineContext, block: suspend [ERROR : CoroutineScope].() -> T): T\n",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-core/commonMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 31,
      "offset": 33,
      "length": 1,
      "code": {
        "startLine": 29,
        "length": 1,
        "offset": 73,
        "surroundingCode": " * @param block the coroutine code.\n */\npublic expect fun <T> runBlocking(\n    context: CoroutineContext = EmptyCoroutineContext,\n    block: suspend CoroutineScope.() -> T\n): T"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-core.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-4549506763776363149"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: CoroutineScope",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-core/nativeMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 4,
      "offset": 26,
      "length": 14,
      "code": {
        "startLine": 2,
        "length": 14,
        "offset": 69,
        "surroundingCode": "\nimport kotlin.coroutines.CoroutineContext\nimport kotlinx.coroutines.CoroutineScope\nimport kotlinx.coroutines.runBlocking\n\n/** Native `runBlocking` implementation */"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-core.nativeMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "6369037768767093186"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: runBlocking",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-core/nativeMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 26,
      "length": 11,
      "code": {
        "startLine": 3,
        "length": 11,
        "offset": 109,
        "surroundingCode": "import kotlin.coroutines.CoroutineContext\nimport kotlinx.coroutines.CoroutineScope\nimport kotlinx.coroutines.runBlocking\n\n/** Native `runBlocking` implementation */\npublic actual fun <T> runBlocking(\n    context: CoroutineContext,"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-core.nativeMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "-1139874356830275224"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Actual function 'runBlocking' has no corresponding expected declaration\nThe following declaration is incompatible because parameter types are different:\n    public expect fun <T> runBlocking(context: CoroutineContext = ..., block: suspend [ERROR : CoroutineScope].() -> T): T\n",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-core/nativeMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 33,
      "length": 1,
      "code": {
        "startLine": 6,
        "length": 1,
        "offset": 77,
        "surroundingCode": "\n/** Native `runBlocking` implementation */\npublic actual fun <T> runBlocking(\n    context: CoroutineContext,\n    block: suspend CoroutineScope.() -> T\n): T = runBlocking(context, block)"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-core.nativeMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "6104351782260021368"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "kotlin",
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: CoroutineScope",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "run-blocking-core/nativeMain/kotlin/com/javiersc/run/blocking/RunBlocking.kt",
      "language": "kotlin",
      "line": 10,
      "offset": 19,
      "length": 14,
      "code": {
        "startLine": 8,
        "length": 14,
        "offset": 85,
        "surroundingCode": "public actual fun <T> runBlocking(\n    context: CoroutineContext,\n    block: suspend CoroutineScope.() -> T\n): T = runBlocking(context, block)"
      }
    }
  ],
  "attributes": {
    "module": "run-blocking-kmp.run-blocking-core.nativeMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "4154651867146391966"
}]}